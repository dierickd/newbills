{% extends 'base.html.twig' %}

{% block title %}Project{% endblock %}

{% block body %}
    <div class="
        {% if project.status == 1 %} border-success {% endif %}
        {% if project.status == 2 %} border-danger {% endif %}
        {% if project.status == 3 %} border-warning {% endif %}
        border-3 main-header d-flex justify-content-between align-items-center py-3">
        {% include '_components/_project_header.html.twig' %}
    </div>

    <div class="container-main">

        <div class="d-flex">
            <section class="container">
                <div class="section-header-project-detail">
                    <turbo-frame id="{{ project.id }}">
                        <div>
                            <p class="h3">{{ project.name }}</p>
                            <p class="h6 fw-normal text-secondary">{{ project.application.name }}</p>
                        </div>
                        <div class="my-4">{{ project.description }}</div>
                        {% if project.status == 1 %}
                            <a href="{{ path('app_project_crud_edit', {'slug': project.slug}) }}"
                               class="btn btn-outline-primary btn-edit">
                                <img src="{{ asset('images/edit.svg') }}" alt="Modifier" class="img-fluid">
                            </a>
                        {% endif %}
                    </turbo-frame>
                </div>

                <div class="accordion" id="accordionExample">
                    <div class="container-action container my-3 p-0">
                        <button class="d-block btn btn-sm btn-outline-success ms-0 mb-3 ms-auto" type="button"
                                data-bs-toggle="collapse"
                                data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                            Ajouter une fonctionnalit√©
                        </button>

                        <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne"
                             data-bs-parent="#accordionExample">
                            <div class="accordion-body p-0">
                                {{ form_start(form) }}
                                <div class="row g-3 mb-3">
                                    <div class="col">
                                        {{ form_label(form.category) }}
                                        {{ form_widget(form.category) }}
                                    </div>
                                    <div class="col">
                                        {{ form_label(form.name) }}
                                        {{ form_widget(form.name) }}
                                    </div>
                                </div>
                                <div class="row mb-3">
                                    <div class="col">
                                        {{ form_label(form.description) }}
                                        {{ form_widget(form.description) }}
                                    </div>
                                </div>
                                <button type="submit" class="d-block ms-auto btn btn-sm btn-success" formnovalidate>
                                    Ajouter
                                </button>
                                {{ form_end(form) }}
                            </div>
                        </div>
                    </div>
                </div>

            </section>

            <twig:CardLevel :project="project"></twig:CardLevel>
        </div>
    </div>

    {% include '_components/_modal_project.html.twig' with {'project': project, 'modalStatus': modalStatus} %}

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const categorySelectElt = document.getElementById('feature_category');

            categorySelectElt.addEventListener('change', function (e) {
                const formEl = categorySelectElt.closest('form');

                fetch(formEl.action, {
                    method: formEl.method,
                    body: new FormData(formEl)
                })
                    .then(response => response.text())
                    .then(html => {
                        const parser = new DOMParser();
                        const doc = parser.parseFromString(html, 'text/html');
                        const newFeatureFormFieldEl = doc.getElementById('feature_name');

                        newFeatureFormFieldEl.addEventListener('change', function (e) {
                            e.target.classList.remove('is-invalid');
                        });

                        document.getElementById('feature_name').replaceWith(newFeatureFormFieldEl);
                    })
                    .catch(function (err) {
                        console.warn('Something went wrong.', err);
                    });
            });
        })
    </script>
{% endblock %}
